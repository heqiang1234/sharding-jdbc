server:
  port: 8085


spring:
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    # 参数配置，显示SQL
    props:
      sql:
        show: true
    # 配置数据源
    datasource:
      # 给每个数据源取别名，下面的ds1,ds2任意取名字
      names: ds1,ds2
      # 给master-ds1每个数据源配置数据库连接信息
      ds1:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-driver: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://121.40.43.57:3306/shardingjdbc_db?useUnicode=true&charaterEncoding=utf8&tinyInt1isBit=false&serverTimezone=UTC
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5
      #配置ds2-slave
      ds2:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-driver: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://121.40.43.57:3308/shardingjdbc_db?useUnicode=true&charaterEncoding=utf8&tinyInt1isBit=false&serverTimezone=UTC
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5
    # 配置默认数据源ds1
    sharding:
      # 默认数据源，主要用于写，注意一定要配置读写分离，注意，如果不配置，那么会把三个节点都当作从slave节点，新增，删除和修改都会出错
      default-data-source-name: ds1
    # 配置数据源的读写分离，但是数据库一定要做主从复制
    masterslave:
      #配置主从名字，可以任意取名字
      name: ms
      #配置主库master，负责数据的写入
      master-data-source-name: ds1
      # 配置从库slave节点
      slave-data-source-names: ds2
      # 配置slave节点的负载均衡均衡策略，采用轮询机制
      load-balance-algorithm-type: round_robin
# 整合mybatis的配置XXXXX
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.sharding.shardingjdbc.entity